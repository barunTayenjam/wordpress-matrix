
  # Single Nginx proxy for all WordPress sites (Apache-based)

  # WordPress instance: testsite
  wordpress_testsite:
    image: wordpress:php8.3-fpm
    container_name: wp_testsite
    restart: unless-stopped
    ports:
      - "8001:80"
    depends_on:
      - db-primary
      - redis
      - memcached
    environment:
      WORDPRESS_DB_HOST: db-primary:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: testsite_db
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG}
      WORDPRESS_DEBUG_DISPLAY: ${WORDPRESS_DEBUG_DISPLAY}
      WORDPRESS_DEBUG_LOG: ${WORDPRESS_DEBUG_LOG}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_CACHE_KEY_SALT', 'testsite_db');
        define('WP_ENVIRONMENT_TYPE', 'development');
        define('AUTOMATIC_UPDATER_DISABLED', true);
        define('WP_AUTO_UPDATE_CORE', false);
        define('DISALLOW_FILE_EDIT', false);
        define('WP_DEBUG_DISPLAY', ${WORDPRESS_DEBUG_DISPLAY});
        define('WP_DEBUG_LOG', true);
        define('SCRIPT_DEBUG', true);
        define('SAVEQUERIES', true);
        define('WP_MEMORY_LIMIT', '512M');
    volumes:
      - ./wordpress_testsite:/var/www/html
      - ./config/php:/usr/local/etc/php/conf.d:ro
      - ./logs/wordpress_testsite:/var/log/wordpress
    networks:
      - wp-network

  # Nginx proxy for testsite
  nginx_testsite:
    image: nginx:alpine
    container_name: nginx_testsite
    restart: unless-stopped
    depends_on:
      - wordpress_testsite
    volumes:
      - ./wordpress_testsite:/var/www/html:ro
      - ./config/nginx/testsite.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - wp-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testsite.rule=Host(`testsite.${DOMAIN_SUFFIX}`)"
      - "traefik.http.routers.testsite.tls=true"
      - "traefik.http.routers.testsite.middlewares=security-headers"
      - "traefik.http.services.testsite.loadbalancer.server.port=80"
