#!/bin/bash
# WordPress Backup Script

set -euo pipefail

BACKUP_DIR="/backups"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

# Function to backup a WordPress site
backup_site() {
    local site_name=$1
    local site_path="/var/www/html/$site_name"
    
    if [ ! -d "$site_path" ]; then
        echo "❌ Site directory $site_path does not exist"
        return 1
    fi
    
    echo "📦 Backing up $site_name..."
    
    # Create backup directory
    local backup_path="$BACKUP_DIR/$site_name/$TIMESTAMP"
    mkdir -p "$backup_path"
    
    # Backup database
    echo "💾 Backing up database..."
    wp db export "$backup_path/database.sql" --path="$site_path" --allow-root
    
    # Backup files
    echo "📁 Backing up files..."
    tar -czf "$backup_path/files.tar.gz" -C "$site_path" \
        --exclude="wp-content/cache" \
        --exclude="wp-content/uploads/cache" \
        --exclude="*.log" \
        .
    
    # Create backup info
    cat > "$backup_path/backup_info.json" <<EOF
{
    "site": "$site_name",
    "timestamp": "$TIMESTAMP",
    "date": "$(date -Iseconds)",
    "wp_version": "$(wp core version --path="$site_path" --allow-root)",
    "php_version": "$(php -v | head -n1)",
    "mysql_version": "$(wp db version --path="$site_path" --allow-root)"
}
EOF
    
    echo "✅ Backup completed: $backup_path"
}

# Main execution
if [ $# -eq 0 ]; then
    echo "🔄 Backing up all WordPress sites..."
    backup_site "wordpress1"
    backup_site "wordpress2"
else
    backup_site "$1"
fi

echo "🎉 Backup process completed!"