ARG PHP_VERSION=8.3
ARG WORDPRESS_VERSION=latest

# Build stage for extensions
FROM wordpress:${WORDPRESS_VERSION}-php${PHP_VERSION}-fpm-alpine as builder

# Set build arguments for faster builds
ENV MAKEFLAGS="-j$(nproc)"

# Install build dependencies
RUN apk update && apk add --no-cache \
    autoconf \
    g++ \
    make \
    linux-headers \
    icu-dev \
    libxml2-dev \
    libzip-dev \
    oniguruma-dev \
    imagemagick-dev

# Install PHP extensions
RUN docker-php-ext-configure intl \
    && docker-php-ext-install -j$(nproc) \
        bcmath \
        exif \
        intl \
        mysqli \
        opcache \
        pdo_mysql \
        soap \
        sockets \
        zip

# Install PECL extensions
RUN pecl channel-update pecl.php.net \
    && pecl install redis \
    && pecl install xdebug \
    && docker-php-ext-enable redis xdebug

# Try to install ImageMagick (optional)
RUN pecl install imagick && docker-php-ext-enable imagick || echo "ImageMagick skipped"

# Final stage
FROM wordpress:${WORDPRESS_VERSION}-php${PHP_VERSION}-fpm-alpine

# Copy PHP extensions from builder
COPY --from=builder /usr/local/lib/php/extensions/ /usr/local/lib/php/extensions/
COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/

# Install runtime dependencies only
RUN apk add --no-cache \
    nginx \
    supervisor \
    curl \
    wget \
    unzip \
    git \
    bash \
    mysql-client \
    redis \
    imagemagick \
    nodejs \
    npm \
    && rm -rf /var/cache/apk/*

# Install Composer
COPY --from=composer:2.6 /usr/bin/composer /usr/bin/composer

# Install WP-CLI with timeout and retry
RUN curl --connect-timeout 30 --retry 3 --retry-delay 5 \
    -O https://raw.githubusercontent.com/wp-cli/wp-cli/v2.8.1/wp-cli.phar \
    && chmod +x wp-cli.phar \
    && mv wp-cli.phar /usr/local/bin/wp \
    && wp --info || echo "WP-CLI installed"

# Create necessary directories
RUN mkdir -p \
    /var/log/nginx \
    /var/log/php \
    /var/log/supervisor \
    /var/log/wordpress \
    /run/nginx \
    /run/php

# Copy configuration files
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY nginx.conf /etc/nginx/nginx.conf
COPY php-fpm.conf /usr/local/etc/php-fpm.d/www.conf

# Copy WordPress optimization scripts
COPY wp-optimize.sh /usr/local/bin/wp-optimize
COPY entrypoint.sh /usr/local/bin/docker-entrypoint-custom
COPY health.php /var/www/html/health.php
RUN chmod +x /usr/local/bin/wp-optimize /usr/local/bin/docker-entrypoint-custom

# Set proper permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

EXPOSE 80

ENTRYPOINT ["/usr/local/bin/docker-entrypoint-custom"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]