# Dynamic WordPress Sites Configuration
# This configuration automatically handles all WordPress sites

# Map to determine which upstream to use based on server name
map $host $backend {
    default "";
    ~^(?<site>[^.]+)\..*$ $site:9000;
}

# Map to determine document root based on server name
map $host $document_root {
    default /var/www/html;
    ~^xandar\..*$ /var/www/xandar;
    ~^sakaar\..*$ /var/www/sakaar;
    ~^(?<site>[^.]+)\..*$ /var/www/wordpress_$site;
}

# Default server block for all WordPress sites
server {
    listen 80 default_server;
    server_name _;
    
    # DNS resolver for dynamic upstream resolution
    resolver 127.0.0.11 valid=30s;
    
    # Dynamic document root
    root $document_root;
    index index.php index.html index.htm;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        image/svg+xml;

    # Client max body size
    client_max_body_size 100M;

    # Timeout settings
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # WordPress specific rules
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # Deny access to sensitive WordPress files
    location ~* /(?:uploads/)?.*\.php$ {
        deny all;
    }

    location ~ /\.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
    }

    # Deny access to wp-config.php
    location ~ /wp-config\.php {
        deny all;
    }

    # Deny access to . files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Cache static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Handle PHP files with dynamic upstream
    location ~ \.php$ {
        # Check if backend is defined
        if ($backend = "") {
            return 404;
        }
        
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_pass $backend;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Nginx status (for monitoring)
    location = /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        try_files $uri =404;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        try_files $uri =404;
    }
}

# Catch-all for unknown domains
server {
    listen 80;
    server_name ~^(?<subdomain>.+)\.(?<domain>.+)$;
    
    # Return 404 for unknown sites
    location / {
        return 404 "Site not found: $host";
        add_header Content-Type text/plain;
    }
}