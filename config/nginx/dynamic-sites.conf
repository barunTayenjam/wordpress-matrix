# Dynamic WordPress Sites Configuration
# This configuration automatically handles all WordPress sites based on hostname

# Map to determine which PHP-FPM upstream to use based on server name
map $host $backend {
    default "";
    ~^xandar\..*$ xandar:9000;
    ~^sakaar\..*$ sakaar:9000;
    ~^(?<site>[^.]+)\..*$ wordpress_$site:9000;
}

# Map to determine the document root inside the Nginx container based on server name
map $host $site_root {
    default /var/www/html; # Fallback, should ideally not be hit
    ~^xandar\..*$ /var/www/xandar;
    ~^sakaar\..*$ /var/www/sakaar;
    ~^(?<site>[^.]+)\..*$ /var/www/wordpress_$site;
}

# Default server block for all WordPress sites
server {
    listen 80 default_server;
    server_name _; # Catch-all

    # DNS resolver for dynamic upstream resolution within Docker
    resolver 127.0.0.11 valid=30s;

    # Dynamic document root
    root $site_root;
    index index.php index.html index.htm;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Performance settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json image/svg+xml;
    client_max_body_size 100M;
    keepalive_timeout 65s;

    # WordPress specific rules
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # Deny access to sensitive files
    location ~ /\.(htaccess|htpasswd|ini|log|sh|sql|conf)$ { deny all; }
    location ~ /wp-config\.php { deny all; }
    location ~ /\. { deny all; }
    location ~* /(?:uploads/)?.*\.php$ { deny all; }

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Handle PHP files with dynamic upstream
    location ~ \.php$ {
        if ($backend = "") {
            return 404; # Or a custom error page
        }

        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_pass $backend;
        # The SCRIPT_FILENAME must be the path *inside the PHP-FPM container*, which is always /var/www/html
        fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param DOCUMENT_ROOT $site_root; # This is for PHP's context, using the Nginx root
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Nginx status (for monitoring)
    location = /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}